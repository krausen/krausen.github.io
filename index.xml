<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Niclas Krause</title><link>https://krausen.github.io/</link><description>Recent content on Niclas Krause</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 10 Sep 2021 15:54:04 +0200</lastBuildDate><atom:link href="https://krausen.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>How to setup Nginx as a reverse proxy in GKE</title><link>https://krausen.github.io/posts/reverse_proxy_gke/</link><pubDate>Fri, 10 Sep 2021 15:54:04 +0200</pubDate><guid>https://krausen.github.io/posts/reverse_proxy_gke/</guid><description>Before diving in to the specifics of how to set it up in GKE, let&amp;rsquo;s understand what it is we want to achieve and what a reverse proxy is. Put simply, a reverse proxy is a server that redirects clients to the appropriate back end server. The reason for using such an approach are many and here are some:
Obscure the internal architecture of your back end One DNS record, access all you services from a common URL Load balance by distributing requests to you back end servers Protect against denial of service attacks by enforcing rate limits to your clients SSL encryption can be handled here and ease the load of the application servers Configure the Nginx First of all we need a configuration for the Nginx that we want to deploy.</description></item><item><title>Symmetric encryption by hand</title><link>https://krausen.github.io/posts/simple_transposition_cipher/</link><pubDate>Wed, 11 Aug 2021 09:49:40 +0200</pubDate><guid>https://krausen.github.io/posts/simple_transposition_cipher/</guid><description>Secure your message I recently stumbled upon a way of encrypting messages that is clever and simple to do yourself. All you need is a pen and a paper. Optionally have a friend that can receive and decrypt your message, this makes it a lot more fun! The method is called Columnar Transposition. A variant of it, the Double Transposition Cipher have been used as method for securing messages in the World War I &amp;amp; II.</description></item><item><title>About</title><link>https://krausen.github.io/about/</link><pubDate>Tue, 10 Aug 2021 12:24:42 +0200</pubDate><guid>https://krausen.github.io/about/</guid><description>My name is Niclas Krause and I work as a software developer in Stockholm, Sweden. I have a Bachelors degree in Computer science and a broad interest in software and computers.
Working as a Software developer I constantly stumble upon interesting ideas. What captures my interest are ways to building better software, useful technology, best practices, architecture, ways of working. This blog is my attempt to gather the best of that in on place.</description></item><item><title>Simple rules for CI</title><link>https://krausen.github.io/posts/ci_rules/</link><pubDate>Sun, 08 Aug 2021 15:02:58 +0200</pubDate><guid>https://krausen.github.io/posts/ci_rules/</guid><description>I like the concept of Simple rules. Basically they are 3-5 simple rules on how to deal with a complex problem. This is not magic number but keeping it in that range makes them easy to remember and the constraint forces you to think about the essential and most important rules. They should be followed as a guideline when making decisions rather than followed as an algorithm. In my experience they work well in sticking to a strategy or way of working in a team.</description></item></channel></rss>